//! generated by flatc-zig from Schema.fbs

const flatbuffers = @import("flatbuffers");

/// Same as List, but with 64-bit offsets, allowing to represent
/// extremely large data values.
pub const LargeList = struct {
    const Self = @This();

    pub fn pack(self: Self, builder: *flatbuffers.Builder) flatbuffers.Error!u32 {
        _ = self;
        try builder.startTable();
        return builder.endTable();
    }
};

/// Same as List, but with 64-bit offsets, allowing to represent
/// extremely large data values.
pub const PackedLargeList = struct {};
