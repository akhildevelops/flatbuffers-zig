//! generated by flatc-zig from Schema.fbs

const flatbuffers = @import("flatbuffers");
const types = @import("lib.zig");

pub const FloatingPoint = struct {
    precision: types.Precision = .half,

    const Self = @This();

    pub fn init(packed_: PackedFloatingPoint) flatbuffers.Error!Self {
        return .{
            .precision = try packed_.precision(),
        };
    }

    pub fn pack(self: Self, builder: *flatbuffers.Builder) flatbuffers.Error!u32 {
        try builder.startTable();
        try builder.appendTableField(types.Precision, self.precision);
        return builder.endTable();
    }
};

pub const PackedFloatingPoint = struct {
    table: flatbuffers.Table,

    const Self = @This();

    pub fn init(size_prefixed_bytes: []u8) flatbuffers.Error!Self {
        return .{ .table = try flatbuffers.Table.init(size_prefixed_bytes) };
    }

    pub fn precision(self: Self) flatbuffers.Error!types.Precision {
        return self.table.readFieldWithDefault(types.Precision, 0, .half);
    }
};
