//! generated by flatc-zig from Schema.fbs

const flatbuffers = @import("flatbuffers");

/// Contains two child arrays, run_ends and values.
/// The run_ends child array must be a 16/32/64-bit integer array
/// which encodes the indices at which the run with the value in
/// each corresponding index in the values child array ends.
/// Like list/struct types, the value array can be of any type.
pub const RunEndEncoded = struct {
    const Self = @This();

    pub fn pack(self: Self, builder: *flatbuffers.Builder) flatbuffers.Error!u32 {
        _ = self;
        try builder.startTable();
        return builder.endTable();
    }
};

/// Contains two child arrays, run_ends and values.
/// The run_ends child array must be a 16/32/64-bit integer array
/// which encodes the indices at which the run with the value in
/// each corresponding index in the values child array ends.
/// Like list/struct types, the value array can be of any type.
pub const PackedRunEndEncoded = struct {};
